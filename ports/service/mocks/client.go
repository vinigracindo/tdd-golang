// Code generated by MockGen. DO NOT EDIT.
// Source: ports/service/client.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/vinigracindo/tdd-golang/ports/domain"
)

// MockClientServiceInterface is a mock of ClientServiceInterface interface.
type MockClientServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientServiceInterfaceMockRecorder
}

// MockClientServiceInterfaceMockRecorder is the mock recorder for MockClientServiceInterface.
type MockClientServiceInterfaceMockRecorder struct {
	mock *MockClientServiceInterface
}

// NewMockClientServiceInterface creates a new mock instance.
func NewMockClientServiceInterface(ctrl *gomock.Controller) *MockClientServiceInterface {
	mock := &MockClientServiceInterface{ctrl: ctrl}
	mock.recorder = &MockClientServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientServiceInterface) EXPECT() *MockClientServiceInterfaceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockClientServiceInterface) Get(name string) (domain.ClientInterface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", name)
	ret0, _ := ret[0].(domain.ClientInterface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockClientServiceInterfaceMockRecorder) Get(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockClientServiceInterface)(nil).Get), name)
}
